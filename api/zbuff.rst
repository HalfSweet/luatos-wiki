zbuff - c内存数据操作库
=======================

zbuff.create()
--------------

创建zbuff

**参数**

========== ==================================================
传入值类型 解释
========== ==================================================
int        字节数
any        可选参数，number时为填充数据，string时为填充字符串
========== ==================================================

**返回值**

========== ================================
返回值类型 解释
========== ================================
object     zbuff对象，如果创建失败会返回nil
========== ================================

**例子**

.. code:: lua

   -- 创建zbuff
   local buff = zbuff.create(1024) -- 空白的
   local buff = zbuff.create(1024, 0x33) --创建一个初值全为0x33的内存区域
   local buff = zbuff.create(1024, "123321456654") -- 创建，并填充一个已有字符串的内容

--------------

buff:write()
------------

zbuff写数据

**参数**

========== ========================================================
传入值类型 解释
========== ========================================================
any        写入buff的数据，string时为一个参数，number时可为多个参数
========== ========================================================

**返回值**

========== ==================
返回值类型 解释
========== ==================
number     数据成功写入的长度
========== ==================

**例子**

.. code:: lua

   -- 类file的读写操作
   local len = buff:write("123") -- 写入数据, 指针相应地往后移动，返回写入的数据长度
   local len = buff:write(0x1a,0x30,0x31,0x32,0x00,0x01)  -- 按数值写入多个字节数据

--------------

buff:read()
-----------

zbuff读数据

**参数**

========== ==================
传入值类型 解释
========== ==================
int        读取buff中的字节数
========== ==================

**返回值**

========== ========
返回值类型 解释
========== ========
string     读取结果
========== ========

**例子**

.. code:: lua

   -- 类file的读写操作
   local str = buff:read(3)

--------------

buff:seek()
-----------

zbuff设置光标位置

**参数**

+-----------------------------------+-----------------------------------+
| 传入值类型                        | 解释                              |
+===================================+===================================+
| int                               | whence,                           |
|                                   | 基点，基点可以是“zbuff.SEEK_SET”: |
|                                   | 基点为 0                          |
|                                   | （文件开头）；“zbuff.SEEK_CUR”:   |
|                                   | 基点为当前位置；“zbuff.SEEK_END”: |
|                                   | 基点为文件尾；                    |
+-----------------------------------+-----------------------------------+

**返回值**

========== ======================================
返回值类型 解释
========== ======================================
int        设置光标后从buff开头计算起的光标的位置
========== ======================================

**例子**

.. code:: lua

   buff:seek(zbuff.SEEK_SET, 0) -- 把光标设置到指定位置

--------------
