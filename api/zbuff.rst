zbuff - c内存数据操作库
=======================

   本页文档由\ `这个文件 <https://gitee.com/openLuat/LuatOS/tree/master/luat/modules/luat_lib_zbuff.c>`__\ 自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢！

zbuff.create(length,data)
-------------------------

创建zbuff

**参数**

========== ==================================================
传入值类型 解释
========== ==================================================
int        字节数
any        可选参数，number时为填充数据，string时为填充字符串
========== ==================================================

**返回值**

========== ================================
返回值类型 解释
========== ================================
object     zbuff对象，如果创建失败会返回nil
========== ================================

**例子**

.. code:: lua

   -- 创建zbuff
   local buff = zbuff.create(1024) -- 空白的
   local buff = zbuff.create(1024, 0x33) --创建一个初值全为0x33的内存区域
   local buff = zbuff.create(1024, "123321456654") -- 创建，并填充一个已有字符串的内容

--------------

buff:write(para,…)
------------------

zbuff写数据

**参数**

========== ========================================================
传入值类型 解释
========== ========================================================
any        写入buff的数据，string时为一个参数，number时可为多个参数
========== ========================================================

**返回值**

========== ==================
返回值类型 解释
========== ==================
number     数据成功写入的长度
========== ==================

**例子**

.. code:: lua

   -- 类file的读写操作
   local len = buff:write("123") -- 写入数据, 指针相应地往后移动，返回写入的数据长度
   local len = buff:write(0x1a,0x30,0x31,0x32,0x00,0x01)  -- 按数值写入多个字节数据

--------------

buff:read(length)
-----------------

zbuff读数据

**参数**

========== ==================
传入值类型 解释
========== ==================
int        读取buff中的字节数
========== ==================

**返回值**

========== ========
返回值类型 解释
========== ========
string     读取结果
========== ========

**例子**

.. code:: lua

   -- 类file的读写操作
   local str = buff:read(3)

--------------

buff:seek(base,offset)
----------------------

zbuff设置光标位置

**参数**

+-----------------------------------+-----------------------------------+
| 传入值类型                        | 解释                              |
+===================================+===================================+
| int                               | 偏移长度                          |
+-----------------------------------+-----------------------------------+
| int                               | whence,                           |
|                                   | 基点，默                          |
|                                   | 认zbuff.SEEK_SET。zbuff.SEEK_SET: |
|                                   | 基点为 0                          |
|                                   | （文件开头），zbuff.SEEK_CUR:     |
|                                   | 基点为当前位置，zbuff.SEEK_END:   |
|                                   | 基点为文件尾                      |
+-----------------------------------+-----------------------------------+

**返回值**

========== ======================================
返回值类型 解释
========== ======================================
int        设置光标后从buff开头计算起的光标的位置
========== ======================================

**例子**

.. code:: lua

   buff:seek(0) -- 把光标设置到指定位置
   buff:seek(5,zbuff.SEEK_CUR)
   buff:seek(-3,zbuff.SEEK_END)

--------------

buff:pack(format,val1, val2,…)
------------------------------

将一系列数据按照格式字符转化，并写入

**参数**

========== ======================================
传入值类型 解释
========== ======================================
string     后面数据的格式（符号含义见下面的例子）
val        传入的数据，可以为多个数据
========== ======================================

**返回值**

========== ==================
返回值类型 解释
========== ==================
int        成功写入的数据长度
========== ==================

**例子**

.. code:: lua

   buff:pack(">IIH", 0x1234, 0x4567, 0x12) -- 按格式写入几个数据
   -- A：string
   -- f：float
   -- d：double
   -- n：Lua number
   -- c：char  int8
   -- b：byte  uint8
   -- h：int16
   -- H：uint16
   -- i：int32
   -- I：uint32
   -- l：int64
   -- L：uint64
   -- <：little endian
   -- >：big endian
   -- =：native endian

--------------

buff:unpack(format)
-------------------

将一系列数据按照格式字符读取出来

**参数**

========== ==========================================
传入值类型 解释
========== ==========================================
string     数据的格式（符号含义见上面pack接口的例子）
========== ==========================================

**返回值**

========== ===============================================
返回值类型 解释
========== ===============================================
any        按格式读出来的数据，如果某数据读取失败，就是nil
========== ===============================================

**例子**

.. code:: lua

   local a,b,c,s = buff:unpack(">IIHA10") -- 按格式读取几个数据

--------------

buff:readI8()
-------------

读取一个I8数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readI8()

--------------

buff:readI16()
--------------

读取一个I16数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readI16()

--------------

buff:readI32()
--------------

读取一个I32数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readI32()

--------------

buff:readI64()
--------------

读取一个I64数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readI64()

--------------

buff:readU8()
-------------

读取一个U8数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readU8()

--------------

buff:readU16()
--------------

读取一个U16数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readU16()

--------------

buff:readU32()
--------------

读取一个U32数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readU32()

--------------

buff:readU64()
--------------

读取一个U64数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readU64()

--------------

buff:readF32()
--------------

读取一个F32数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readF32()

--------------

buff:readF64()
--------------

读取一个F64数据

**参数**

无

**返回值**

========== ===========================
返回值类型 解释
========== ===========================
number     读取的数据，如果越界则为nil
========== ===========================

**例子**

.. code:: lua

   local data = buff:readF64()

--------------

buff:writeI8()
--------------

写入一个I8数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeI8()

--------------

buff:writeI16()
---------------

写入一个I16数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeI16()

--------------

buff:writeI32()
---------------

写入一个I32数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeI32()

--------------

buff:writeI64()
---------------

写入一个I64数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeI64()

--------------

buff:writeU8()
--------------

写入一个U8数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeU8()

--------------

buff:writeU16()
---------------

写入一个U16数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeU16()

--------------

buff:writeU32()
---------------

写入一个U32数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeU32()

--------------

buff:writeU64()
---------------

写入一个U64数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeU64()

--------------

buff:writeF32()
---------------

写入一个F32数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeF32()

--------------

buff:writeF64()
---------------

写入一个F64数据

**参数**

无

**返回值**

========== ================
返回值类型 解释
========== ================
number     写入成功的字节数
========== ================

**例子**

.. code:: lua

   local len = buff:writeF64()

--------------

buff[n]
-------

以下标形式进行数据读写

**参数**

========== ==================================
传入值类型 解释
========== ==================================
int        第几个数据，以0开始的下标（C标准）
========== ==================================

**返回值**

========== ============
返回值类型 解释
========== ============
number     该位置的数据
========== ============

**例子**

.. code:: lua

   buff[0] = 0xc8
   local data = buff[0]

--------------
