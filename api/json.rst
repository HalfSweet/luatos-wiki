json - json生成和解析库
=======================

   本页文档由\ `这个文件 <https://gitee.com/openLuat/LuatOS/tree/master/luat/packages/lua-cjson/lua_cjson.c>`__\ 自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢！

json.encode
-----------

将对象序列化为json字符串

**参数**

+------------+--------------------------------------------------------+
| 传入值类型 | 解释                                                   |
+============+========================================================+
| param      | obj 需要序列化的对象                                   |
+------------+--------------------------------------------------------+
| param      | string                                                 |
|            | 浮点数精度和模式,这项不存                              |
|            | 在的时候,为默认值“7g”,数字只支持“0~14”,模式只支持“f/g” |
+------------+--------------------------------------------------------+

**返回值**

========== =====================================
返回值类型 解释
========== =====================================
str        序列化后的json字符串, 失败的话返回nil
err        序列化失败的报错信息
========== =====================================

**例子**

.. code:: lua

   @usage json.encode(obj,"12f")-->浮点数用%.12f的方式转换为字符串

--------------

json.encode_number_precision
----------------------------

设置encode数字精度和模式

**参数**

+------------+--------------------------------------------------------+
| 传入值类型 | 解释                                                   |
+============+========================================================+
| param      | string                                                 |
|            | 浮点数精度和模式,这项不存                              |
|            | 在的时候,为默认值“7g”,数字只支持“0~14”,模式只支持“f/g” |
+------------+--------------------------------------------------------+
| no         | return                                                 |
+------------+--------------------------------------------------------+
| usage      | json.enc                                               |
|            | ode_number_precision()–>浮点数用%.7g的方式转换为字符串 |
+------------+--------------------------------------------------------+
| usage      | json.encode                                            |
|            | _number_precision(“2”)–>浮点数用%.2g的方式转换为字符串 |
+------------+--------------------------------------------------------+
| usage      | json.encode_nu                                         |
|            | mber_precision(“10f”)–>浮点数用%.10f的方式转换为字符串 |
+------------+--------------------------------------------------------+

**返回值**

无

**例子**

无

--------------

json.decode
-----------

将字符串反序列化为对象

**参数**

========== ============================
传入值类型 解释
========== ============================
param      str 需要反序列化的json字符串
========== ============================

**返回值**

========== ==============================================
返回值类型 解释
========== ==============================================
obj        反序列化后的对象(通常是table), 失败的话返回nil
result     成功返回1,否则返回0
err        反序列化失败的报错信息
========== ==============================================

**例子**

无

--------------
